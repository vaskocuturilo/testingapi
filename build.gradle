group 'com.wargaming'
version '0.1'

apply plugin: 'io.qameta.allure'
apply plugin: 'java'

allure {
    autoconfigure = true
    version = '2.7.0'
    aspectjweaver = true
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.github.opengl-8080:assertjGen-gradle-plugin:2.0.0"
    }
}

apply plugin: "com.github.opengl-BOBO.assertjGen2"


buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.5"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'io.rest-assured:rest-assured:4.0.0'
    compile 'io.rest-assured:json-path:4.0.0'
    compile 'io.rest-assured:json-schema-validator:4.0.0'
    compile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'
    compile group: 'org.testng', name: 'testng', version: '7.0.0'
    compile group: 'io.qameta.allure', name: 'allure-java-commons', version: '2.7.0'
    compile group: 'io.qameta.allure', name: 'allure-testng', version: '2.7.0'
    testCompile("org.assertj:assertj-core:3.11.1")
    testCompile group: 'org.slf4j', name: 'slf4j-nop', version: '1.8.0-beta2'
}

assertjGen {
    packages = ['com.wargaming.api.schema.notspecified']
    targetDir = "src/main/java/"

    hierarchical = true
    entryPointClassPackage = 'assertions'
    generateAssertionsInPackage = 'assertions'
    generateAssertionsForAllFields = true
    generateBddAssertions = false
    generateSoftAssertions = false
    generateJUnitSoftAssertions = false
    generateAssertionsForAllFields = true
}


test {
    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }
}